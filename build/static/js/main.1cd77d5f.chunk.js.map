{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","App.js","index.js"],"names":["base_url","axios","get","then","response","data","person","post","id","delete","put","Filter","handler","onChange","PersonForm","name","number","handlerAddPerson","handlerName","handlerNumber","onSubmit","value","type","Person","deletePerson","onClick","Persons","persons","handlerDelete","map","element","Notification","message","className","Error","App","useState","setPersons","search","setSearch","newName","setNewName","newNumber","setNewNumber","notification","setNotification","error","setError","useEffect","personsServices","catch","console","log","personsToShow","filter","toLowerCase","includes","validatePerson","exitsPerson","forEach","event","target","preventDefault","personObject","window","confirm","findPersonToEdit","find","personEdited","updatedPerson","setTimeout","newPerson","concat","personToDelete","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cd77d5f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst base_url = 'http://localhost:3001/api/persons';\n\nconst getDataFromServer = () => {\n    return axios.get(base_url).then(response => response.data);\n};\n\nconst savePersonInServer = (person) => {\n    return axios.post(base_url, person).then(response => response.data);\n};\n\nconst deletePersonInServer = (id) => {\n    return axios.delete(base_url+'/'+id).then(response => response.data);\n}\n\nconst updatePerson = (id, person) => {\n    return axios.put(base_url+'/'+id, person).then(response => response.data);\n}\n\nexport default { getDataFromServer, savePersonInServer, deletePersonInServer, updatePerson }; ","import React from 'react';\n\nconst Filter = ({ handler }) => {\n    return (\n        <div>\n            filter shown with <input onChange={handler}/>\n        </div>\n    );\n};\n\nexport default Filter;","import React from 'react';\n\nconst PersonForm = ({ name, number, handlerAddPerson, handlerName, handlerNumber }) => {\n    return (\n        <div>\n            <form onSubmit={handlerAddPerson}>\n            <div>\n                name: <input value={name} onChange={handlerName}/>\n            </div>\n            <div>\n                number: <input value={number} onChange={handlerNumber}/>\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n            </form>\n        </div>\n    );\n}\n\nexport default PersonForm;","import React from 'react';\n\nconst Person = ({ person, deletePerson }) => {\n    return (\n        <div>\n            {person.name} {person.number}\n            <button onClick={deletePerson}>delete</button>\n        </div>\n\n    );\n};\n\nexport default Person;","import React from 'react';\nimport Person from './Person';\n\nconst Persons = ({ persons, handlerDelete }) => {\n    return (\n        <div>\n            {persons.map(element => <Person key={element.name} person={element} deletePerson={() => handlerDelete(element.id)} />)}\n        </div>\n    );\n};\n\nexport default Persons;","import React, { useState, useEffect } from 'react';\nimport personsServices from './services/persons';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\n\nconst Notification = ({ message }) => {\n    if (message === null)\n        return null\n\n    return (\n        <div className=\"notification\">\n            {message}\n        </div>\n    );\n}\n\nconst Error = ({ message }) => {\n    if (message === null)\n        return null\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    );\n}\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([]); \n    const [ search, setSearch ] = useState('');\n    const [ newName, setNewName ] = useState('');\n    const [ newNumber, setNewNumber ] = useState('');\n    const [ notification, setNotification ] = useState(null);\n    const [ error, setError ] = useState(null);\n\n    const getDataServer = () => {\n        personsServices\n            .getDataFromServer()\n            .then((persons) => {setPersons(persons)})\n            .catch((error) => {console.log(error)});\n    };\n\n    useEffect(getDataServer, []);\n\n    const personsToShow = search ? persons.filter(person => person.name.toLowerCase().includes(search.toLowerCase())) : persons; \n\n    const addPerson = (event) => {\n        event.preventDefault();\n        const personObject = {\n            name: newName, \n            number: newNumber\n        }\n\n        if (validatePerson()) {\n            if (window.confirm(newName + ' is already added to phonebook, replace the old number with a new one?')) {\n                const findPersonToEdit = persons.find((person) => person.name === newName);\n                const id = findPersonToEdit.id;\n                const personEdited = {...findPersonToEdit, number: newNumber};\n\n                personsServices\n                    .updatePerson(id, personEdited)\n                    .then((updatedPerson) => {\n                        setPersons(persons.map(person => person.id !== id ? person : updatedPerson));\n                        setNotification('Edited ' + updatedPerson.name + ' new number: ' + updatedPerson.number);\n                        setTimeout(() => setNotification(null), 5000);\n                    })\n                    .catch((error) => {\n                        setError('Information of ' + personEdited.name + ' has already been removed from server');\n                        setTimeout(() => setError(null), 5000);\n                    });\n            }\n        } else {\n            personsServices\n                .savePersonInServer(personObject)\n                .then((newPerson) => {\n                    setPersons(persons.concat(newPerson));\n                    setNotification('Added ' + newPerson.name);\n                    setTimeout(() => setNotification(null), 5000);\n                })\n                .catch((error) => {console.log(error)});\n        }\n        setNewName('');\n        setNewNumber('');\n    }\n\n    const validatePerson = () => {\n        let exitsPerson = false;\n\n        persons.forEach((person) => {\n            if (person.name === newName)\n                exitsPerson = true;\n        });\n        return exitsPerson;\n    }\n\n    const handleInputSearchChange = (event) => {\n        setSearch(event.target.value);\n    }\n\n    const handleInputNameChange = (event) => {\n        setNewName(event.target.value);\n    }\n\n    const handleInputNumberChange = (event) => {\n        setNewNumber(event.target.value);\n    }\n\n    const deletePerson = (id) => {\n        const personToDelete = persons.find(person => person.id === id);\n\n        if (window.confirm('Delete ' + personToDelete.name + '?')) {\n            personsServices\n                .deletePersonInServer(id)\n                .then((deletedPerson) => {\n                    setPersons(persons.filter(person => person.id !== id));\n                    setNotification('Deleted ' + deletedPerson.name);\n                    setTimeout(() => setNotification(null), 5000);\n                })\n                .catch(error => console.log(error));\n        }\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={notification} /> \n            <Error message={error} />\n            <Filter handler={handleInputSearchChange} /> \n            <h3>Add a new</h3>\n            <PersonForm \n                name={newName}\n                number={newNumber}\n                handlerAddPerson={addPerson}\n                handlerName={handleInputNameChange} \n                handlerNumber={handleInputNumberChange}\n            />\n            <h2>Numbers</h2>\n            <Persons persons={personsToShow} handlerDelete={deletePerson}/>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}